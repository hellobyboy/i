Commands:

Open Terminal Window and type the following command


1.	To know to which USB port the GPS module is attached:
# ls /dev/ttyUSB*

2.	Select USB Port
# sudo cat /dev/ttyUSB0

3.	To install gpsd, make sure your Pi has an Internet connection and run the following commands:
# sudo apt-get update
# sudo apt-get install gpsd

4.	You will need to enable the gpsd systemd service by running the following commands:
# sudo systemctl enable gpsd.socket 
# sudo systemctl start gpsd.socket

5.	After that use the gpsd command 
# gpsd

6.	Try running gpsmon to get a live-streaming update of GPS data!
# gpsmon
cgps which gives a less detailed, but still quite nice output
# cgps -s
(NOTE:if your got command stuck use “CTRL + z” for exit that command)

7.	You can abort gpsd by the following command
# sudo killall gpsd


Requirement:
1.	GPS module.
2.	USB to TTL converter.
3.	Connecting jumper wires (female to female).

Hardware Connectivity :
1.	Connect the VCC Pin of GPS Module to 3.3V Pin of USB to TTL converter
2.	Connect the GND Pin of GPS Module to GND Pin of USB to TTL converter
3.	Connect the Tx Pin of GPS Module to Rx Pin of USB to TTL converter
4.	Connect the Rx Pin of GPS Module to Tx Pin of USB to TTL converter.
5.	Lastly connect the USB to TTL converter to USB port of Raspberry Pi.


CODE - 

'''
GPS Interfacing with Raspberry Pi using Pyhton
http://www.electronicwings.com
'''
import serial               #import serial pacakge
from time import sleep
import webbrowser           #import package for opening link in browser
import sys                  #import system package

def GPS_Info():
    global NMEA_buff
    global lat_in_degrees
    global long_in_degrees
    nmea_time = []
    nmea_latitude = []
    nmea_longitude = []
    nmea_time = NMEA_buff[0]                    #extract time from GPGGA string
    nmea_latitude = NMEA_buff[1]                #extract latitude from GPGGA string
    nmea_longitude = NMEA_buff[3]               #extract longitude from GPGGA string
    
    print("NMEA Time: ", nmea_time,'\n')
    print ("NMEA Latitude:", nmea_latitude,"NMEA Longitude:", nmea_longitude,'\n')
    
    lat = float(nmea_latitude)                  #convert string into float for calculation
    longi = float(nmea_longitude)               #convertr string into float for calculation
    
    lat_in_degrees = convert_to_degrees(lat)    #get latitude in degree decimal format
    long_in_degrees = convert_to_degrees(longi) #get longitude in degree decimal format
    
#convert raw NMEA string into degree decimal format   
def convert_to_degrees(raw_value):
    decimal_value = raw_value/100.00
    degrees = int(decimal_value)
    mm_mmmm = (decimal_value - int(decimal_value))/0.6
    position = degrees + mm_mmmm
    position = "%.4f" %(position)
    return position
    


gpgga_info = "$GPGGA,"
ser = serial.Serial ("/dev/ttyS0")              #Open port with baud rate
GPGGA_buffer = 0
NMEA_buff = 0
lat_in_degrees = 0
long_in_degrees = 0

try:
    while True:
        received_data = (str)(ser.readline())                   #read NMEA string received
        GPGGA_data_available = received_data.find(gpgga_info)   #check for NMEA GPGGA string                 
        if (GPGGA_data_available>0):
            GPGGA_buffer = received_data.split("$GPGGA,",1)[1]  #store data coming after "$GPGGA," string 
            NMEA_buff = (GPGGA_buffer.split(','))               #store comma separated data in buffer
            GPS_Info()                                          #get time, latitude, longitude
 
            print("lat in degrees:", lat_in_degrees," long in degree: ", long_in_degrees, '\n')
            map_link = 'http://maps.google.com/?q=' + lat_in_degrees + ',' + long_in_degrees    #create link to plot location on Google map
            print("<<<<<<<<press ctrl+c to plot location on google maps>>>>>>\n")               #press ctrl+c to plot on map and exit 
            print("------------------------------------------------------------\n")
                        
except KeyboardInterrupt:
    webbrowser.open(map_link)        #open current position information in google map
    sys.exit(0)